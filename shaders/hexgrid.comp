#version 460
#extension GL_ARB_shading_language_include : require  // enable include

#include "utils/setup.glsl"  // setup bindings and push constants
#include "utils/coordinates.glsl"

void main() {
    // IMAGE DATA
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(outImage);
   
    // PUSH CONSTANTS
    float time     = pc.data1.x;
    float aspect   = pc.data1.y;
    vec2  mouse    = pc.data1.zw;
    float mixValue = pc.data2.x;

    // DEFAULT VALUES
    vec3 colHex = vec3(0.6);
    vec3 colBg = vec3(0.0);
    vec3 colActive = vec3(0.0, 0.0, 0.9);
    vec3 colGlow = vec3(0.0, 0.0, 0.9);
    vec3 colGlowActive = vec3(0.0, 0.0, 0.9);
    float N = 5.0;

    // COORDS
    vec2 uv = vec2(float(texelCoord.x)/(size.x), float(texelCoord.y)/(size.y));
    uv.y = 1.0 - uv.y;  // flip y coordinate for standart setup
    uv = uv * 2.0 - 1.0;

    vec2 uvAspect = vec2(uv.x * aspect, uv.y);

    mouse.x *= aspect;  // we need aspect ratio corrected mouse position to use it with aspect uv's

    vec2 uvNorm = uvAspect;
    hexData hex = hexCoords(uvNorm * N);

    // INITIAL COLOR
    vec3 col = vec3(0);

    // hexagons
    float pulse = clamp01((sin(length(hex.id) - time)));
    float hexs = smoothstep(0.1 + pulse * 0.4, 0.1 + pulse * 0.4 + 0.01, hex.d);
    col += hexs * colHex;

    // background
    col += (1 - hexs) * colBg;

    // pulses
    col += pulse * colActive * hexs;

    // glow
    col += clamp01(0.03 / (hex.d)) * colGlowActive * pulse;
    col += clamp01(0.005 / (hex.d)) * colGlow * (1.0 - pulse);

    // flare
    col += pow(clamp01(hex.uv.y), 2.9) * hexs * 0.15;
    col += pow(clamp01(uvNorm.y), 1.7) * hexs * 0.15;

    // shadow
    col -= pow(clamp01(-hex.uv.y), 1.7) * hexs * 0.25;
    col -= pow(clamp01(-uvNorm.y), 1.7) * hexs * 0.045;

    // edge flare
    col += smoothstep(0.4, 0.42, clamp01(dot(hex.uv, normalize(vec2(1.0, 1.73))))) * hexs * 0.2;
    col += smoothstep(0.4, 0.42, clamp01(dot(hex.uv, normalize(vec2(-1.0, 1.73))))) * hexs * 0.2;

    // edge shadow
    col -= smoothstep(0.4, 0.42, clamp01(dot(-hex.uv, normalize(vec2(1.0, 1.73))))) * hexs * 0.06;
    col -= smoothstep(0.4, 0.42, clamp01(dot(-hex.uv, normalize(vec2(-1.0, 1.73))))) * hexs * 0.06;

    imageStore(outImage, texelCoord, vec4(col, 1.0));
}